{"name":"Firstfive","tagline":"A nice little script to run in your first five minutes on any server.","body":"# FirstFive\r\n[![Build Status](https://travis-ci.org/AndrewGuenther/firstfive.svg?branch=master)](https://travis-ci.org/AndrewGuenther/firstfive)\r\n\r\nAs my dotfiles repo began to grow, I was inspired by wanting to automate the steps in Bryan Kennedy's post [My First 5 Minutes On A Server; Or, Essential Security for Linux Servers](http://plusbryan.com/my-first-5-minutes-on-a-server-or-essential-security-for-linux-servers) and [@icco's dotfiles repo](https://github.com/icco) to create a slightly more general solution for setting up a new system to my liking. Are there other tools to do this? Definitely, but I feel like this script is a nice bare minimum setup script that offers a good enough level of flexibility.\r\n\r\n## Features\r\n\r\n* Install packages from multiple package managers:\r\n  * pacman\r\n  * apt-get\r\n  * yum\r\n  * brew\r\n* Symbolicly link dotfiles\r\n  * Back up existing dotfiles\r\n  * Automatically pull submodules\r\n* Copy files into specified locations\r\n* Execute a custom bash script\r\n\r\n## Usage\r\n\r\n```\r\ncurl -sSL https://raw.githubusercontent.com/AndrewGuenther/firstfive/master/infect.sh | bash -s <YOUR REPO URL>\r\n```\r\n\r\n### Packages\r\n\r\nPackages to be install should be specified in the ```packages.list``` file. If a specific package can only be found in a specific package manager, then that package manager can be specified after a space.\r\n\r\nHere's an example:\r\n```\r\nvim\r\nzsh\r\nwifi-radar pacman\r\n```\r\n\r\n**NOTE:** You **cannot** specify multiple specific package managers on a single line.\r\n\r\n### Specific\r\n\r\nIf you wish to have a file copied to a specific location, just place it in the ```specific``` folder (or subfolder) and list it in the ```specific.list``` file. You can also add an \"a\" to the end of a line to indicate you wish for the file to be appended to rather than overwritten.\r\n\r\nHere's an example:\r\n```\r\nmy.zsh-theme    link/oh-my-zsh/custom/\r\nssh/id_rsa.pub  ~/.ssh/\r\nssh/config      ~/.ssh/\r\nsources.list    /etc/apt/sources.list a\r\n```\r\n\r\n### Link\r\n\r\nThe simplist of the bunch. Anything placed in the ```link``` directory will be symlinked into the home directory and prefixed with a ```.```. Any files which already exist will be backed up in the ```.olddots``` directory. If a ```.olddots``` file still exists, this step will fail.\r\n\r\n## Example\r\n\r\nYou can see a very simple example configuration which is used for integration testing [here.](https://github.com/AndrewGuenther/firstfive-example)\r\n\r\n## Acknowledgements\r\n\r\n[@icco](https://github.com/icco) and [his dotfile repo](https://github.com/icco/dotFiles) for persuading me to create a dotfiles repo in the first place.\r\n","google":"UA-48997278-1","note":"Don't delete this file! It's used internally to help with page regeneration."}